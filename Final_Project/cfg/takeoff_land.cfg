#!/usr/bin/env python

PACKAGE = "Final_Project"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
"""
gen.add("int_param",    int_t,    0, "An Integer parameter",    50,  0, 100)
gen.add("double_param",    double_t,    0, "A double parameter",    .5, 0,   1)
gen.add("str_param",    str_t,    0, "A string parameter",    "Hello World")
gen.add("bool_param",    bool_t,    0, "A Boolean parameter",    True)
"""
"""
gen.add("x_des",	double_t,	0,	"X desired",	0, -1, 1)
gen.add("y_des",	double_t,	0,	"Y desired",	0, -1, 1)
gen.add("z_des",	double_t,	0,	"Z desired",	0, -1, 1)
"""

gen.add("takeoff", bool_t, 0, "Take off flag", False)
gen.add("land", bool_t, 0, "Land flag", False)
gen.add("bottom", bool_t, 0, "Bottom Cam", False)
gen.add("front", bool_t, 0, "Front Cam", False)
gen.add("time_align", double_t, 0, "Controller time", 5, 0, 500)
gen.add("time_take", double_t, 0, "Takeoff time", 6, 0, 500)
gen.add("alignHeight", double_t, 0, "Align height", 1.2, 0, 2.5)
gen.add("rotSpeed", double_t, 0, "Rotational speed", 0.1, 0, 0.5)
gen.add("searchRotTime", double_t, 0, "Rotational speed", 0.5, 0, 2)
gen.add("searchWaitTime", double_t, 0, "Rotational speed", 0.5, 0, 2)

"""
size_enum = gen.enum([ gen.const("Small",    int_t, 0, "A small constant"),
                                         gen.const("Medium",    int_t, 1, "A medium constant"),
                                         gen.const("Large",    int_t, 2, "A large constant"),
                                         gen.const("ExtraLarge",    int_t, 3, "An extra large constant")],
                                        "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)
"""

exit(gen.generate(PACKAGE, "Final_Project", "takeoff_land"))
